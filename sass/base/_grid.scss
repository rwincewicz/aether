// Configuration
$desktop-columns: 12 !default; // the number of columns in your grid
$tablet-columns: 12 !default; // the number of columns in your grid
$handheld-columns: 12 !default; // the number of columns in your grid

$gutter-width: 10 !default;
$max-desktop-width: 1140px + $gutter-width !default;
$max-tablet-landscape-width: 960px + $gutter-width !default;
$max-tablet-width: 768px + $gutter-width !default;
$max-handheld-landscape-width: 420px + $gutter-width !default;
$max-handheld-width: 300px + $gutter-width !default;

// Utility variables for column and row widths â€” you should never need to modify these
// Handheld
$column-h-width: (($max-handheld-width - $gutter-width) - ($gutter-width * $handheld-columns)) / $handheld-columns;
$grid-h-width: ($column-h-width*$handheld-columns) + ($gutter-width*$handheld-columns);
// Handheld Landscape
$column-hl-width: (($max-handheld-landscape-width - $gutter-width) - ($gutter-width * $handheld-columns)) / $handheld-columns;
$grid-hl-width: ($column-hl-width*$handheld-columns) + ($gutter-width*$handheld-columns);
// Tablet
$column-t-width: (($max-tablet-width - $gutter-width) - ($gutter-width * $tablet-columns)) / $tablet-columns;
$grid-t-width: ($column-t-width*$tablet-columns) + ($gutter-width*$tablet-columns);
// Tablet Landscape
$column-tl-width: (($max-tablet-landscape-width - $gutter-width) - ($gutter-width * $tablet-columns)) / $tablet-columns;
$grid-tl-width: ($column-tl-width*$tablet-columns) + ($gutter-width*$tablet-columns);
// Desktop
$column-d-width: (($max-desktop-width - $gutter-width) - ($gutter-width * $desktop-columns)) / $desktop-columns;
$grid-d-width: ($column-d-width*$desktop-columns) + ($gutter-width*$desktop-columns);

$total-h-width:  $grid-h-width;
$total-hl-width: $grid-hl-width;
$total-t-width:  $grid-t-width;
$total-tl-width: $grid-tl-width;
$total-d-width:  $grid-d-width;

@mixin row($columns:$desktop-columns,$total-width:$total-d-width,$grid-width:$grid-d-width) {
	width: $total-width*(($gutter-width + $grid-width)/$grid-width) - $gutter-width;
}

$handheld: "h";

@mixin column($prefix:$handheld,$columns:$handheld-columns,$total-width:$total-h-width,$column-width:$column-h-width,$grid-width:$grid-h-width) {
	  @for $col from 1 through $columns {
		.g-#{$prefix}-#{$col} {
			width: $total-width*(((($gutter-width+$column-width)*$col)-$gutter-width) / $grid-width);
		}
	}
}

@mixin offset($prefix:$handheld,$columns:$handheld-columns,$total-width:$total-h-width,$column-width:$column-h-width,$grid-width:$grid-h-width) {
	  @for $col from 1 through ($columns - 1) {
		.g-#{$prefix}-o#{$col} {
			margin-left: ($total-width*(((($gutter-width+$column-width)*$col)-$gutter-width) / $grid-width)) + ($total-width*(($gutter-width)/$grid-width));
		}
	}
}

body{}
#page {
	width: $max-handheld-width;
	margin: 0 auto;
}

// Create the Columns
$_allColumns: "";
@for $col from 1 to ($handheld-columns + 1) {
	@if $_allColumns == "" {
		$_allColumns: ".g-h-#{$col}, .g-hl-#{$col}";
	} @else {
		$_allColumns: $_allColumns + ", .g-h-#{$col}, .g-hl-#{$col}";
	}
}

@for $col from 1 to ($tablet-columns + 1) {
	@if $_allColumns == "" {
		$_allColumns: ".g-t-#{$col}, .g-tl-#{$col}";
	} @else {
		$_allColumns: $_allColumns + ", .g-t-#{$col}, .g-tl-#{$col}";
	}
}

@for $col from 1 to ($desktop-columns + 1) {
	@if $_allColumns == "" {
		$_allColumns: ".g-d-#{$col}";
	} @else {
		$_allColumns: $_allColumns + ", .g-d-#{$col}";
	}
}

#{$_allColumns} {
	@include box-sizing(border-box);
	display: inline;
	float: left;
	overflow: hidden;
	margin-left: $gutter-width*.5;
	margin-right: $gutter-width*.5;
}

.row {
	@include clearfix();
	margin-right: (($gutter-width*.5)*1);
	margin-left: (($gutter-width*.5)*1);
	.row {
		margin-right: (($gutter-width*.5)*-1);
		margin-left: (($gutter-width*.5)*-1);
	}
}

// Generate column classes for handheld media
@include column;

// Generate offset column classes for handheld media
@include offset;

.row {
	@include row($tablet-columns,$total-h-width,$grid-h-width);
	@if $show-grid-background {
		$grid-background-total-columns: $handheld-columns;
		$grid-background-offset: 4px;
		$grid-background-column-width: $column-h-width;
		$grid-background-gutter-width: $gutter-width;
		$grid-background-baseline-height: $base-line-height;
		@include grid-background;
	}
}

// Handheld Landscape
@media only screen and (min-width: 480px) {
	body {}
	#page {
	width: $max-handheld-landscape-width;
	}

	// Disables iphone font size increase when viewing in landscape mode.
	html { -webkit-text-size-adjust: none; }
	body {}

	.row {
		@include row($tablet-columns,$total-hl-width,$grid-hl-width);
		@if $show-grid-background {
			$grid-background-total-columns: $handheld-columns;
			$grid-background-offset: 4px;
			$grid-background-column-width: $column-hl-width;
			$grid-background-gutter-width: $gutter-width;
			$grid-background-baseline-height: $base-line-height;
			@include grid-background;
		}
	}

	@include column("hl",$handheld-columns,$total-hl-width,$column-hl-width,$grid-hl-width);
	@include offset("hl",$handheld-columns,$total-hl-width,$column-hl-width,$grid-hl-width);

}

// Tablet Portrait
@media only screen and (min-width: 768px) {
	body{}
	#page {
	width: $max-tablet-width;
	}

	.row {
		@include row($tablet-columns,$total-t-width,$grid-t-width);
		@if $show-grid-background {
			$grid-background-total-columns: $tablet-columns;
			$grid-background-offset: 4px;
			$grid-background-column-width: $column-t-width;
			$grid-background-gutter-width: $gutter-width;
			$grid-background-baseline-height: $base-line-height;
			@include grid-background;
		}
	}

	@include column("t",$tablet-columns,$total-t-width,$column-t-width,$grid-t-width);
	@include offset("t",$tablet-columns,$total-t-width,$column-t-width,$grid-t-width);

}

// Tablet Landscape
@media only screen and (min-width: 960px) {
	body{}
	#page {
	width: $max-tablet-landscape-width;
	}

	.row {
		@include row($tablet-columns,$total-tl-width,$grid-tl-width);
		@if $show-grid-background {
			$grid-background-total-columns: $tablet-columns;
			$grid-background-offset: 4px;
			$grid-background-column-width: $column-tl-width;
			$grid-background-gutter-width: $gutter-width;
			$grid-background-baseline-height: $base-line-height;
			@include grid-background;
		}
	}

	@include column("tl",$tablet-columns,$total-tl-width,$column-tl-width,$grid-tl-width);
	@include offset("tl",$tablet-columns,$total-tl-width,$column-tl-width,$grid-tl-width);

}

// Desktop
@media only screen and (min-width: 1160px) {
	body{}
	#page {
	width: $max-desktop-width;
	}

	.row {
		@include row($desktop-columns,$total-d-width,$grid-d-width);
		@if $show-grid-background {
			$grid-background-total-columns: $desktop-columns;
			$grid-background-offset: 4px;
			$grid-background-column-width: $column-d-width;
			$grid-background-gutter-width: $gutter-width;
			$grid-background-baseline-height: $base-line-height;
			@include grid-background;
		}
	}

	@include column("d",$desktop-columns,$total-d-width,$column-d-width,$grid-d-width);
	@include offset("d",$desktop-columns,$total-d-width,$column-d-width,$grid-d-width);

}

