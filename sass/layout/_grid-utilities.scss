// Configuration
$desktop-columns: 12 !default; // the number of columns in your grid
$tablet-columns: 12 !default; // the number of columns in your grid
$handheld-columns: 12 !default; // the number of columns in your grid

$gutter-width: 10 !default;
$max-desktop-width:            1150px !default;
$max-tablet-landscape-width:   970px !default;
$max-tablet-width:             754px !default;
$max-handheld-landscape-width: 430px !default;
$max-handheld-width:           310px !default;

// Media
$handheld: "h";
$handheld-landscape: "hl";
$tablet: "t";
$tablet-landscape: "tl";
$desktop: "d";

@function col-width($media:$desktop, $max-width:$max-desktop-width, $columns:$desktop-columns) {
  @if $media == $handheld {
    $columns:$handheld-columns;
    $max-width:$max-handheld-width;
  }
  @else if $media == $handheld-landscape {
    $columns:$handheld-columns;
    $max-width:$max-handheld-landscape-width;
  }
  @else if $media == $tablet {
    $columns:$tablet-columns;
    $max-width:$max-tablet-width;
  }
  @else if $media == $tablet-landscape {
    $columns:$tablet-columns;
    $max-width:$max-tablet-landscape-width;
  }
  @else if $media == $desktop {
    $columns:$desktop-columns;
    $max-width:$max-desktop-width;
  }
  @return (($max-width - $gutter-width) - ($gutter-width * $columns)) / $columns;
}

@function grid-width($media:$desktop, $col-width:col-width($desktop), $columns:$desktop-columns) {
  @if $media == $handheld {
    $columns:$handheld-columns;
    $col-width:col-width($handheld);
  }
  @else if $media == $handheld-landscape {
    $columns:$handheld-columns;
    $col-width:col-width($handheld-landscape);
  }
  @else if $media == $tablet {
    $columns:$tablet-columns;
    $col-width:col-width($tablet);
  }
  @else if $media == $tablet-landscape {
    $columns:$tablet-columns;
    $col-width:col-width($tablet-landscape);
  }
  @else if $media == $desktop {
    $columns:$desktop-columns;
    $col-width:col-width($desktop);
  }
  @return ($col-width * $columns) + ($gutter-width * $columns);
}

@mixin grid($media:$desktop, $columns:$desktop-columns, $grid-width:grid-width($desktop), $column-width:col-width($desktop)) {

  @if $media == $handheld {
  $columns:$handheld-columns;
  $grid-width:grid-width($handheld);
  $column-width:col-width($handheld);
  }
  @if $media == $handheld-landscape {
  $columns:$handheld-columns;
  $grid-width:grid-width($handheld-landscape);
  $column-width:col-width($handheld-landscape);
  }
  @else if $media == $tablet {
  $columns:$tablet-columns;
  $grid-width:grid-width($tablet);
  $column-width:col-width($tablet);
  }
  @else if $media == $tablet-landscape {
  $columns:$tablet-columns;
  $grid-width:grid-width($tablet-landscape);
  $column-width:col-width($tablet-landscape);
  }
  @else if $media == $desktop {
  $columns:$desktop-columns;
  $grid-width:grid-width($desktop);
  $column-width:col-width($desktop);
  }

  // generate column classes
  @for $n from 1 through $columns {
    .g-#{$media}-#{$n} {
      @include column($n,$columns,$grid-width,$column-width);
    }
  }

  // generate offset classes
  @for $n from 1 through ($columns - 1) {
    .g-#{$media}-o-#{$n} {
      @include offset($n,$columns,$grid-width,$column-width);
    }
  }

  // generate push classes
  @for $n from 1 through ($columns - 1) {
    .g-#{$media}-push-#{$n} {
      @include push($n,$columns,$grid-width,$column-width);
    }
  }

  // generate pull classes
  @for $n from 1 through ($columns - 1) {
    .g-#{$media}-pull-#{$n} {
      @include pull($n,$columns,$grid-width,$column-width);
    }
  }

}

@mixin column($n,$columns:$desktop-columns,$grid-width:grid-width($desktop),$column-width:col-width($desktop)) {
  width: $grid-width*(((($gutter-width+$column-width)*$n)-$gutter-width) / $grid-width);
}

@mixin offset($n,$columns:$desktop-columns,$grid-width:grid-width($desktop),$column-width:col-width($desktop)) {
  margin-left: ($grid-width*(((($gutter-width+$column-width)*$n)-$gutter-width) / $grid-width)) + ($grid-width*(($gutter-width)/$grid-width));
}

@mixin push($n,$columns:$desktop-columns,$grid-width:grid-width($desktop),$column-width:col-width($desktop)) {
  margin-left: ($grid-width*(((($gutter-width+$column-width)*$n)-$gutter-width) / $grid-width)) + ($grid-width*(($gutter-width)/$grid-width)) + $gutter-width/2;
  margin-right: (-$grid-width*(((($gutter-width+$column-width)*$n)-$gutter-width) / $grid-width)) + (-$grid-width*(($gutter-width)/$grid-width)) + $gutter-width/2;
}

@mixin pull($n,$columns:$desktop-columns,$grid-width:grid-width($desktop),$column-width:col-width($desktop)) {
  margin-left: (-$grid-width*(((($gutter-width+$column-width)*$n)-$gutter-width) / $grid-width)) + (-$grid-width*(($gutter-width)/$grid-width)) + $gutter-width/2;
}

// Create a variable that stores all column classes
$_allColumns: "#{enumerate(".g-h", 1, $handheld-columns)},
#{enumerate(".g-hl", 1, $handheld-columns)},
#{enumerate(".g-t", 1, $tablet-columns)},
#{enumerate(".g-tl", 1, $tablet-columns)},
#{enumerate(".g-d", 1, $desktop-columns)}";

// Zero out desktop push/pull/offset to avoid specificity problems 
// in the media class stack when moving things like sidebars around.
// This must come before column classes.
@mixin zero-d-classes() {
  #{enumerate(".g-d-o", 1, $desktop-columns)} {
    margin-left: 0;
  }

  #{enumerate(".g-d-push", 1, $desktop-columns)} {
    margin-left: $gutter-width*.5;
    margin-right: $gutter-width*.5;
  }

  #{enumerate(".g-d-pull", 1, $desktop-columns)} {
    margin-left: $gutter-width*.5;
  }
}